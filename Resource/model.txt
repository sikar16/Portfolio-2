

// schema.prisma

enum UserStatus {
  ACTIVE
  INACTIVE
  SUSPENDED
}

model ServiceProvider {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  fullName  String
  createdAt DateTime @default(now())
  users     User[]
}

model User {
  id            Int              @id @default(autoincrement())
  phoneNumber   String           @unique
  email         String           @unique
  password      String
  status        UserStatus       // Changed to enum
  createdAt     DateTime         @default(now())
  userInfo      UserInfo?
  userDetails   UserDetail?
  services      Service[]
  skills        Skill[]
  projects      Project[]
  testimonials  Testimonial[]
  blogs         Blog[]
  socialLinks   SocialMediaLink[]
  technologies  ProjectTechnology[]
}

model UserInfo {
  id          Int     @id @default(autoincrement())
  firstName   String
  lastName    String
  middleName  String?
  country     String
  city        String
  userId      Int     @unique
  user        User    @relation(fields: [userId], references: [id])
}

model UserDetail {
  id                  Int     @id @default(autoincrement())
  title               String
  quote               String
  heroImage           String?
  aboutImage          String?
  yearsOfExperience   Int
  aboutMe             String
  cv                  String?
  rate                Float
  userId              Int     @unique
  user                User    @relation(fields: [userId], references: [id])
}

model Service {
  id          Int     @id @default(autoincrement())
  name        String
  image       String?
  description String
  userId      Int
  user        User    @relation(fields: [userId], references: [id])
}

model SkillCategory {
  id      Int      @id @default(autoincrement())
  name    String
  userId  Int
  user    User      @relation(fields: [userId], references: [id])
  skills  Skill[]
}

model Skill {
  id                Int              @id @default(autoincrement())
  name              String
  description       String
  image             String?
  skillCategoryId   Int
  userId            Int
  skillCategory     SkillCategory     @relation(fields: [skillCategoryId], references: [id])
  user              User              @relation(fields: [userId], references: [id])
}

model ProjectCategory {
  id      Int      @id @default(autoincrement())
  name    String
  userId  Int
  user    User      @relation(fields: [userId], references: [id])
  projects Project[]
}

model Project {
  id                  Int                  @id @default(autoincrement())
  name                String
  description         String
  demoLink            String?
  userId              Int
  projectCategoryId   Int
  projectCategory     ProjectCategory      @relation(fields: [projectCategoryId], references: [id])
  user                User                 @relation(fields: [userId], references: [id])
  projectImages       ProjectImage[]       // Multiple images
  technologies        ProjectTechnology[]   // Multiple technologies
}

model Blog {
  id          Int          @id @default(autoincrement())
  title       String
  content     String
  userId      Int
  user        User         @relation(fields: [userId], references: [id])
  blogImages   BlogImage[]  // Multiple images
}

model ProjectImage {
  id          Int     @id @default(autoincrement())
  image       String
  projectId   Int
  project     Project  @relation(fields: [projectId], references: [id])
}

model BlogImage {
  id          Int     @id @default(autoincrement())
  imageUrl    String
  blogId      Int
  blog        Blog    @relation(fields: [blogId], references: [id])
}

model SocialMediaLink {
  id      Int     @id @default(autoincrement())
  name    String
  link    String
  userId  Int
  user    User    @relation(fields: [userId], references: [id])
}

model Testimonial {
  id                  Int      @id @default(autoincrement())
  reviewerFullName    String
  reviewerTitle       String
  reviewerImage       String?
  feedback            String
  dateOfReview        DateTime @default(now())
  userId              Int
  user                User     @relation(fields: [userId], references: [id])
}

model ProjectTechnology {
  id          Int     @id @default(autoincrement())
  name        String
  projectId   Int
  project     Project  @relation(fields: [projectId], references: [id])
}


































logo - id
     - logoimage
user- id
    - email
    - phone

userInfo- id
        - first name
        - last name
        - image for hero
        - image for about
        - qoute

userDetails - id
            - year of expriance
            - postion
            - background
            - resume

address - id
        - country
        - city
        - subcity

service - id
        - describtion

single service - id
               - service name
               - service describtion
               - service image
            
skills - id
       - describtion

skillcategory - id 
              - name

single skill -id
             - skill name
             - skill describtion
             - skill image
             
project - id
        - describtion
    
project category - id
                 - name  

single project - id
               - name
               - describtion
               - link
               - image 

testimony - id
          - Reviwer fullname
          - Reviwer image
          - Reviwer postion
          - Reviwer feedback











 1. Logo
- id
- logoImage (URL)


 2. User
- id
- email
- phone


 3. UserInfo
- id
- firstName
- lastName
- heroImage (URL)
- aboutImage (URL)
- quote
- socialLinks (array of URLs to social media profiles)

 4. UserDetails
- id
- yearsOfExperience
- position
- background (text)
- cv

 5. Address
- id
- country
- city
- subcity

 6. Service
- id
- description (text)

 7. SingleService
- id
- serviceName
- serviceDescription (text)
- serviceImage (URL)

 8. Skills
- id
- description (text)

 9. SkillCategory
- id
- name
- description (text)

 10. SingleSkill
- id
- skillName
- skillDescription (text)
- skillImage (URL)

 11. Project
- id
- description (text)

 12. ProjectCategory
- id
- name
- description (text)

 13. SingleProject
- id
- projectName
- projectDescription (text)
- link (URL)
- image (URL)


 14. Testimony
- id
- reviewerFullName
- reviewerImage (URL)
- reviewerPosition
- reviewerFeedback (text)











